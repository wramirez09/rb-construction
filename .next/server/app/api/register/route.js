"use strict";(()=>{var e={};e.id=569,e.ids=[569],e.modules={67096:e=>{e.exports=require("bcrypt")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},28346:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>w,originalPathname:()=>f,patchFetch:()=>v,requestAsyncStorage:()=>g,routeModule:()=>c,serverHooks:()=>h,staticGenerationAsyncStorage:()=>m,staticGenerationBailout:()=>x});var s={};r.r(s),r.d(s,{POST:()=>d});var a=r(95419),i=r(69108),o=r(99678),n=r(67096),u=r.n(n),p=r(98984),l=r(32021);async function d(e){let{name:t,email:r,password:s}=await e.json();if(!t||!r||!s)return p.NextResponse.json("Missing Fields",{status:400});if(await l._.user.findUnique({where:{email:r.toLowerCase()}}))return p.NextResponse.json("User already exists!",{status:500});let a=await u().hash(s,10);return await l._.user.create({data:{name:t,email:r.toLowerCase(),password:a}}),p.NextResponse.json("User created successfully!",{status:200})}let c=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/register/route",pathname:"/api/register",filename:"route",bundlePath:"app/api/register/route"},resolvedPagePath:"/Users/dev/Documents/GitHub/rb-construction/src/app/api/register/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:g,staticGenerationAsyncStorage:m,serverHooks:h,headerHooks:w,staticGenerationBailout:x}=c,f="/api/register/route";function v(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:m})}},32021:(e,t,r)=>{r.d(t,{_:()=>a});let s=require("@prisma/client"),a=global.prisma||new s.PrismaClient({log:["query"]})}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[638,791],()=>r(28346));module.exports=s})();